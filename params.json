{"name":"Test Images using Volley and RecyclerView","tagline":"William Rond√≥n demo","body":"# Overview:\r\nHere we are using the \"recyclerview\" component to show a list of images obtained from the internet (flickr).\r\nThe internet connection is processed using the library \"volley\".\r\nWe also reuse the images kept in the disk cache if already there, if not in cache we get the image from the web.\r\n\r\nThis app show the usage of the testing library **\"espresso\"**, which is now part of the Android Support Repository.\r\n\r\n## Code:\r\nUsing the singleton pattern for the network request (volley) we do requests like this, to get the list of views\r\n```java\r\nqueue = MySingleton.getInstance(getActivity().getApplicationContext()).getRequestQueue();\r\n        String url = \"https://api.flickr.com/services/feeds/photos_public.gne?tags=boston\";\r\n\r\n        // Request a string response from the provided URL. Get Images (list of urls)\r\n        stringRequest = new StringRequest(Request.Method.GET, url,\r\n                new Response.Listener<String>() {\r\n                    @Override\r\n                    public void onResponse(String response) {\r\n\r\n                        try {\r\n                            imagesList = (ArrayList<ImageData>) parseXMLImageData(response);\r\n                            initDataset();\r\n                        } catch (XmlPullParserException e) {\r\n                            e.printStackTrace();\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Log.d(TAG, \"Error XML url transfers. That didn't work!\");\r\n            }\r\n        });\r\n        // Set the tag on the request.\r\n        stringRequest.setTag(TAG2);\r\n        // Add the request to the RequestQueue.\r\n\r\n        if (MySingleton.getInstance(getActivity()).getRequestQueue()!=null){\r\n            MySingleton.getInstance(getActivity()).addToRequestQueue(stringRequest);\r\n        }\r\n```\r\nand getting the images into the adapter for the \"recyclerview\" we do:\r\n```\r\n if(MySingleton.getInstance(getActivity()).getRequestQueue().getCache().get(url)!=null){\r\n                    Log.d(TAG, \">>>>>>>>>>>>>>>>>>  found the image in diskcache\");\r\n                    bytes = MySingleton.getInstance(getActivity()).getRequestQueue().getCache().get(url).data;\r\n                    bmp = BitmapFactory.decodeByteArray(bytes, 0, bytes.length);\r\n                    mDataset.add(new ImageData(bmp));\r\n                } else {\r\n                    Log.d(TAG, \">>>>>>>>>>>>>>>>>>  getting the image from the web\");\r\n                    // Request an Image response from the provided URL.\r\n                    imageRequest = new ImageRequest( url,\r\n                            new Response.Listener<Bitmap>() {\r\n                                //////final String u = url;\r\n                                @Override\r\n                                public void onResponse(Bitmap bitmap) {\r\n                                    ///mImageView.setImageBitmap(bitmap);\r\n                                    Log.d(TAG, \">>>>>>>>>>>>>>>>>>  processing response getting the image from the web\");\r\n                                    mDataset.add(new ImageData(bitmap));\r\n                                    mRecyclerView.setVisibility(View.VISIBLE);\r\n                                    mProgressBar.setVisibility(View.GONE);\r\n                                    mAdapter.notifyDataSetChanged();\r\n                                }\r\n                            }, 0, 0, ImageView.ScaleType.FIT_CENTER,null,\r\n                            new Response.ErrorListener() {\r\n                                public void onErrorResponse(VolleyError error) {\r\n                                    Log.d(TAG, \"Error during Image transfer. That didn't work!\");\r\n                                }\r\n                            });\r\n                    // Set the tag on the request.\r\n                    imageRequest.setTag(TAG2);\r\n                    // Add the request to the RequestQueue.\r\n                    if (MySingleton.getInstance(getActivity()).getRequestQueue()!=null){\r\n                        MySingleton.getInstance(getActivity()).addToRequestQueue(imageRequest);\r\n                    }\r\n                }\r\n```\r\n\r\n## References:\r\n\r\n   Volley Library Usage:    http://developer.android.com/training/volley/index.html\r\n   Recycler View: http://developer.android.com/training/material/lists-cards.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}